[2025-06-24 11:57:08.696] [WARN] [Security] 未认证访问被拦截: POST /error
[2025-06-24 15:51:00.538] [WARN] [Security] 未认证访问被拦截: POST /error
[2025-06-24 15:57:26.481] [WARN] [Security] 未认证访问被拦截: POST /error
[2025-06-24 16:03:23.985] [WARN] [Security] 未认证访问被拦截: POST /error
[2025-06-24 16:12:59.848] [WARN] [Security] 未认证访问被拦截: POST /error
[2025-06-24 16:17:47.857] [INFO] 开始检查数据库完整性...
[2025-06-24 16:17:48.635] [WARN] 检测到数据库表不完整或不存在，将执行初始化脚本 `DatabaseSQL.sql`...
[2025-06-24 16:17:48.770] [ERROR] 数据库初始化脚本执行失败: Failed to execute SQL script statement #10 of class path resource [DatabaseSQL.sql]: ALTER TABLE session ADD CONSTRAINT fk_session_movie FOREIGN KEY (movie_id) REFERENCES movie(id)
[2025-06-24 16:19:55.703] [INFO] 开始检查数据库完整性...
[2025-06-24 16:19:57.107] [WARN] 检测到数据库表不完整或不存在，将执行初始化脚本 `DatabaseSQL.sql`...
[2025-06-24 16:19:58.145] [ERROR] 数据库初始化脚本执行失败: Unknown database 'cinema_ticket_db'
[2025-06-24 16:20:23.033] [INFO] 开始检查数据库完整性...
[2025-06-24 16:20:24.663] [WARN] 检测到数据库表不完整或不存在，将执行初始化脚本 `DatabaseSQL.sql`...
[2025-06-24 16:20:25.696] [ERROR] 数据库初始化脚本执行失败: Unknown database 'cinema_ticket_db'
[2025-06-24 16:21:32.579] [INFO] 开始检查数据库完整性...
[2025-06-24 16:21:34.176] [WARN] 检测到数据库表不完整或不存在，将执行初始化脚本 `DatabaseSQL.sql`...
[2025-06-24 16:21:35.211] [ERROR] 数据库初始化脚本执行失败: Unknown database 'cinema_ticket_db'
[2025-06-24 16:24:23.173] [INFO] 开始检查数据库完整性...
[2025-06-24 16:24:23.579] [WARN] 检测到数据库表不完整或不存在，将执行初始化脚本 `DatabaseSQL.sql`...
[2025-06-24 16:24:25.297] [INFO] 数据库初始化脚本执行成功。
[2025-06-24 16:24:54.511] [WARN] [Security] 未认证访问被拦截: POST /error
[2025-06-24 16:27:55.251] [INFO] 开始检查数据库完整性...
[2025-06-24 16:27:55.781] [WARN] 检测到数据库表不完整或不存在，将执行初始化脚本 `DatabaseSQL.sql`...
[2025-06-24 16:27:55.861] [ERROR] 数据库初始化脚本执行失败: Failed to execute SQL script statement #12 of class path resource [DatabaseSQL.sql]: ALTER TABLE session ADD CONSTRAINT fk_session_movie FOREIGN KEY (movie_id) REFERENCES movie(id)
[2025-06-24 16:28:44.099] [INFO] 开始检查数据库完整性...
[2025-06-24 16:28:44.286] [WARN] 检测到数据库表不完整或不存在，将执行初始化脚本 `DatabaseSQL.sql`...
[2025-06-24 16:28:44.366] [ERROR] 数据库初始化脚本执行失败: Failed to execute SQL script statement #12 of class path resource [DatabaseSQL.sql]: ALTER TABLE session ADD CONSTRAINT fk_session_movie FOREIGN KEY (movie_id) REFERENCES movie(id)
[2025-06-24 16:29:09.362] [INFO] 开始检查数据库完整性...
[2025-06-24 16:29:09.755] [WARN] 检测到数据库表不完整或不存在，将执行初始化脚本 `DatabaseSQL.sql`...
[2025-06-24 16:29:09.838] [ERROR] 数据库初始化脚本执行失败: Failed to execute SQL script statement #12 of class path resource [DatabaseSQL.sql]: ALTER TABLE session ADD CONSTRAINT fk_session_movie FOREIGN KEY (movie_id) REFERENCES movie(id)
[2025-06-24 16:32:16.846] [INFO] 开始检查数据库完整性...
[2025-06-24 16:32:17.148] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 16:33:45.713] [INFO] 开始检查数据库完整性...
[2025-06-24 16:33:45.921] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 17:09:38.074] [INFO] 开始检查数据库完整性...
[2025-06-24 17:09:38.085] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 17:13:45.566] [INFO] 开始检查数据库完整性...
[2025-06-24 17:13:45.581] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 17:42:50.065] [INFO] 开始检查数据库完整性...
[2025-06-24 17:42:50.076] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 17:43:16.503] [INFO] 开始检查数据库完整性...
[2025-06-24 17:43:16.519] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 17:43:23.556] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.controller.UserController.login, 参数: [{identifier=testuser, password=password123}]
[2025-06-24 17:43:23.567] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser, password123]
[2025-06-24 17:43:23.971] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=1, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjEzODAwMTM4MDAwIiwiaWQiOjEsImVtYWlsIjoidGVzdEBleGFtcGxlLmNvbSIsInVzZXJuYW1lIjoidGVzdHVzZXIiLCJtZW1iZXJfbGV2ZWwiOjAsInN0YXR1cyI6IkFDVElWRSIsInN1YiI6InRlc3R1c2VyIiwiaXNzIjoiY2luZW1hLXN5c3RlbSIsImlhdCI6MTc1MDc1ODIwMywiZXhwIjoxNzUwNzY1NDAzfQ.iQ3dqZ6m6yFQXo4gd6fsASPQPEezr12ye8GgBbUJnUY}, 耗时: 403ms
[2025-06-24 17:43:23.990] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.controller.UserController.login, 返回值: {user={id=1, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjEzODAwMTM4MDAwIiwiaWQiOjEsImVtYWlsIjoidGVzdEBleGFtcGxlLmNvbSIsInVzZXJuYW1lIjoidGVzdHVzZXIiLCJtZW1iZXJfbGV2ZWwiOjAsInN0YXR1cyI6IkFDVElWRSIsInN1YiI6InRlc3R1c2VyIiwiaXNzIjoiY2luZW1hLXN5c3RlbSIsImlhdCI6MTc1MDc1ODIwMywiZXhwIjoxNzUwNzY1NDAzfQ.iQ3dqZ6m6yFQXo4gd6fsASPQPEezr12ye8GgBbUJnUY}, 耗时: 433ms
[2025-06-24 18:42:01.984] [INFO] 开始检查数据库完整性...
[2025-06-24 18:42:01.997] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 18:42:02.731] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:42:02.834] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=1, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 103ms
[2025-06-24 18:42:03.004] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 参数: [1, Movie(id=null, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=null, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null)]
[2025-06-24 18:42:03.016] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 返回值: Movie(id=1, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=null, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null), 耗时: 11ms
[2025-06-24 18:42:03.016] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [1]
[2025-06-24 18:42:03.130] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=1, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=null, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null), 耗时: 114ms
[2025-06-24 18:42:03.168] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:42:03.173] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=2, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 5ms
[2025-06-24 18:42:03.433] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 参数: [2]
[2025-06-24 18:42:03.435] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 返回值: Movie(id=2, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=OFF), 耗时: 1ms
[2025-06-24 18:42:03.435] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [2]
[2025-06-24 18:42:03.439] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=2, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=OFF), 耗时: 4ms
[2025-06-24 18:42:03.453] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:42:03.457] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=3, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 4ms
[2025-06-24 18:42:03.459] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [3]
[2025-06-24 18:42:03.461] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=3, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 2ms
[2025-06-24 18:42:03.461] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [3]
[2025-06-24 18:42:03.492] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=3, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 31ms
[2025-06-24 18:42:03.494] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 参数: []
[2025-06-24 18:42:03.603] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 异常: null
[2025-06-24 18:42:03.626] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:42:03.632] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=4, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 5ms
[2025-06-24 18:42:03.633] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 参数: [One, Page request [number: 0, size 5, sort: UNSORTED]]
[2025-06-24 18:42:03.661] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 返回值: Page 1 of 1 containing com.asaki0019.cinematicketbookingsystem.entities.Movie instances, 耗时: 28ms
[2025-06-24 18:42:03.676] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:42:03.680] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=5, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 4ms
[2025-06-24 18:42:03.680] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [5]
[2025-06-24 18:42:03.683] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=5, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 18:42:06.877] [INFO] 开始检查数据库完整性...
[2025-06-24 18:42:06.888] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 18:42:06.922] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750761726919, password, orderuser1750761726919@test.com, 1750761726919]
[2025-06-24 18:42:07.090] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:42:07.083355700, id=2}, 耗时: 167ms
[2025-06-24 18:42:07.219] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [updateuser1750761727218, password123, 1750761727, updateuser1750761727218@example.com]
[2025-06-24 18:42:07.356] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:42:07.352914800, id=3}, 耗时: 136ms
[2025-06-24 18:42:07.358] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 参数: [3, 1750761728, updated.updateuser1750761727218@example.com, new_avatar_url]
[2025-06-24 18:42:07.417] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 返回值: {update_time=2025-06-24T18:42:07.417971600, id=3}, 耗时: 59ms
[2025-06-24 18:42:07.418] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [updateuser1750761727218, password123]
[2025-06-24 18:42:07.643] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=3, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjE3MjgiLCJpZCI6MywiYXZhdGFyIjoibmV3X2F2YXRhcl91cmwiLCJlbWFpbCI6InVwZGF0ZWQudXBkYXRldXNlcjE3NTA3NjE3MjcyMThAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InVwZGF0ZXVzZXIxNzUwNzYxNzI3MjE4IiwibWVtYmVyX2xldmVsIjowLCJzdGF0dXMiOiJBQ1RJVkUiLCJzdWIiOiJ1cGRhdGV1c2VyMTc1MDc2MTcyNzIxOCIsImlzcyI6ImNpbmVtYS1zeXN0ZW0iLCJpYXQiOjE3NTA3NjE3MjcsImV4cCI6MTc1MDc2ODkyN30.zjtGqzrfDNbNfsMa5ais9HqoqYjzDnId__piyoyicOU}, 耗时: 225ms
[2025-06-24 18:42:07.664] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [testuser1750761727664, password123, 1750761727, testuser1750761727664@example.com]
[2025-06-24 18:42:07.781] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:42:07.778910400, id=4}, 耗时: 116ms
[2025-06-24 18:42:07.782] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser1750761727664, password123]
[2025-06-24 18:42:07.888] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=4, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjE3MjciLCJpZCI6NCwiZW1haWwiOiJ0ZXN0dXNlcjE3NTA3NjE3Mjc2NjRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyMTc1MDc2MTcyNzY2NCIsIm1lbWJlcl9sZXZlbCI6MCwic3RhdHVzIjoiQUNUSVZFIiwic3ViIjoidGVzdHVzZXIxNzUwNzYxNzI3NjY0IiwiaXNzIjoiY2luZW1hLXN5c3RlbSIsImlhdCI6MTc1MDc2MTcyNywiZXhwIjoxNzUwNzY4OTI3fQ.MIIiylNxx6AIGzO4uuVqVpe7mJN5lmIJrqr0cypVbFo}, 耗时: 106ms
[2025-06-24 18:46:34.767] [INFO] 开始检查数据库完整性...
[2025-06-24 18:46:34.781] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 18:46:35.469] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:46:35.614] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=6, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 145ms
[2025-06-24 18:46:35.664] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 参数: [6, Movie(id=null, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=null, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null)]
[2025-06-24 18:46:35.676] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 返回值: Movie(id=6, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=null, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null), 耗时: 12ms
[2025-06-24 18:46:35.676] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [6]
[2025-06-24 18:46:35.726] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=6, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=null, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null), 耗时: 50ms
[2025-06-24 18:46:35.893] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:46:35.898] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=7, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 18:46:35.898] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 参数: [7]
[2025-06-24 18:46:35.900] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 返回值: Movie(id=7, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=OFF), 耗时: 0ms
[2025-06-24 18:46:35.900] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [7]
[2025-06-24 18:46:35.902] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=7, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=OFF), 耗时: 2ms
[2025-06-24 18:46:35.959] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:46:35.961] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=8, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 2ms
[2025-06-24 18:46:35.962] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [8]
[2025-06-24 18:46:35.965] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=8, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 18:46:35.965] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [8]
[2025-06-24 18:46:35.996] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=8, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 31ms
[2025-06-24 18:46:35.996] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 参数: []
[2025-06-24 18:46:35.998] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 返回值: [{poster_url=null, match_score=1.0, id=8, title=Test Movie One}], 耗时: 2ms
[2025-06-24 18:46:36.020] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:46:36.023] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=9, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 18:46:36.025] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 参数: [One, Page request [number: 0, size 5, sort: UNSORTED]]
[2025-06-24 18:46:36.061] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 返回值: Page 1 of 1 containing com.asaki0019.cinematicketbookingsystem.entities.Movie instances, 耗时: 36ms
[2025-06-24 18:46:36.081] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:46:36.083] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=10, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 2ms
[2025-06-24 18:46:36.085] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [10]
[2025-06-24 18:46:36.088] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=10, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 18:46:36.127] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750761996126, password, orderuser1750761996126@test.com, 1750761996127]
[2025-06-24 18:46:36.239] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:46:36.236818800, id=5}, 耗时: 111ms
[2025-06-24 18:46:36.528] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=5, sessionId=1, seatIds=[1, 2], paymentMethod=ALIPAY)]
[2025-06-24 18:46:36.590] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 返回值: {order_no=ORD1750761996531268, payment_url=http://mock-payment-url.com, total_amount=100.0, id=1}, 耗时: 61ms
[2025-06-24 18:46:36.684] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [updateuser1750761996684, password123, 1750761996, updateuser1750761996684@example.com]
[2025-06-24 18:46:36.878] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:46:36.874175400, id=6}, 耗时: 192ms
[2025-06-24 18:46:36.879] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 参数: [6, 1750761997, updated.updateuser1750761996684@example.com, new_avatar_url]
[2025-06-24 18:46:36.901] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 返回值: {update_time=2025-06-24T18:46:36.901964500, id=6}, 耗时: 22ms
[2025-06-24 18:46:36.903] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [updateuser1750761996684, password123]
[2025-06-24 18:46:37.181] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=6, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjE5OTciLCJpZCI6NiwiYXZhdGFyIjoibmV3X2F2YXRhcl91cmwiLCJlbWFpbCI6InVwZGF0ZWQudXBkYXRldXNlcjE3NTA3NjE5OTY2ODRAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InVwZGF0ZXVzZXIxNzUwNzYxOTk2Njg0IiwibWVtYmVyX2xldmVsIjowLCJzdGF0dXMiOiJBQ1RJVkUiLCJzdWIiOiJ1cGRhdGV1c2VyMTc1MDc2MTk5NjY4NCIsImlzcyI6ImNpbmVtYS1zeXN0ZW0iLCJpYXQiOjE3NTA3NjE5OTcsImV4cCI6MTc1MDc2OTE5N30.EpY1BxPMAi_BeH5ikKNk67Z4ij2SpaEakvB5ih5jJSI}, 耗时: 278ms
[2025-06-24 18:46:37.223] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [testuser1750761997223, password123, 1750761997, testuser1750761997223@example.com]
[2025-06-24 18:46:37.319] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:46:37.313135200, id=7}, 耗时: 95ms
[2025-06-24 18:46:37.320] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser1750761997223, password123]
[2025-06-24 18:46:37.409] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=7, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjE5OTciLCJpZCI6NywiZW1haWwiOiJ0ZXN0dXNlcjE3NTA3NjE5OTcyMjNAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyMTc1MDc2MTk5NzIyMyIsIm1lbWJlcl9sZXZlbCI6MCwic3RhdHVzIjoiQUNUSVZFIiwic3ViIjoidGVzdHVzZXIxNzUwNzYxOTk3MjIzIiwiaXNzIjoiY2luZW1hLXN5c3RlbSIsImlhdCI6MTc1MDc2MTk5NywiZXhwIjoxNzUwNzY5MTk3fQ.8Rqzb1Eio-BX29KDvCMZxAlLObAiTQAHOfu1l2nEQrQ}, 耗时: 89ms
[2025-06-24 18:49:27.449] [INFO] 开始检查数据库完整性...
[2025-06-24 18:49:27.456] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 18:49:28.134] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:49:28.228] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=11, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 94ms
[2025-06-24 18:49:28.282] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 参数: [11, Movie(id=null, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null)]
[2025-06-24 18:49:28.293] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 返回值: Movie(id=11, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null), 耗时: 11ms
[2025-06-24 18:49:28.293] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [11]
[2025-06-24 18:49:28.358] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=11, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null), 耗时: 65ms
[2025-06-24 18:49:28.465] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:49:28.470] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=12, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 4ms
[2025-06-24 18:49:28.471] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 参数: [12]
[2025-06-24 18:49:28.473] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 返回值: Movie(id=12, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=OFF), 耗时: 2ms
[2025-06-24 18:49:28.474] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [12]
[2025-06-24 18:49:28.475] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=12, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=OFF), 耗时: 1ms
[2025-06-24 18:49:28.494] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:49:28.498] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=13, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 4ms
[2025-06-24 18:49:28.500] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [13]
[2025-06-24 18:49:28.503] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=13, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 18:49:28.504] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [13]
[2025-06-24 18:49:28.531] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=13, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 27ms
[2025-06-24 18:49:28.531] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 参数: []
[2025-06-24 18:49:28.535] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 返回值: [{poster_url=null, match_score=1.0, id=13, title=Test Movie One}], 耗时: 4ms
[2025-06-24 18:49:28.555] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:49:28.558] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=14, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 18:49:28.559] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 参数: [One, Page request [number: 0, size 5, sort: UNSORTED]]
[2025-06-24 18:49:28.642] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 返回值: Page 1 of 1 containing com.asaki0019.cinematicketbookingsystem.entities.Movie instances, 耗时: 83ms
[2025-06-24 18:49:28.659] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:49:28.663] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=15, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 18:49:28.665] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [15]
[2025-06-24 18:49:28.666] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=15, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 1ms
[2025-06-24 18:49:58.551] [INFO] 开始检查数据库完整性...
[2025-06-24 18:49:58.564] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 18:49:59.241] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [updateuser1750762199235, password123, 1750762199, updateuser1750762199235@example.com]
[2025-06-24 18:49:59.528] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:49:59.488298100, id=8}, 耗时: 287ms
[2025-06-24 18:49:59.528] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 参数: [8, 1750762200, updated.updateuser1750762199235@example.com, new_avatar_url]
[2025-06-24 18:49:59.573] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 返回值: {update_time=2025-06-24T18:49:59.573733, id=8}, 耗时: 45ms
[2025-06-24 18:49:59.577] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [updateuser1750762199235, password123]
[2025-06-24 18:49:59.731] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=8, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjIyMDAiLCJpZCI6OCwiYXZhdGFyIjoibmV3X2F2YXRhcl91cmwiLCJlbWFpbCI6InVwZGF0ZWQudXBkYXRldXNlcjE3NTA3NjIxOTkyMzVAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InVwZGF0ZXVzZXIxNzUwNzYyMTk5MjM1IiwibWVtYmVyX2xldmVsIjowLCJzdGF0dXMiOiJBQ1RJVkUiLCJzdWIiOiJ1cGRhdGV1c2VyMTc1MDc2MjE5OTIzNSIsImlzcyI6ImNpbmVtYS1zeXN0ZW0iLCJpYXQiOjE3NTA3NjIxOTksImV4cCI6MTc1MDc2OTM5OX0.p0YWsjmjrCVHYFqpzIOFTF_EvHZVRCvpI2k3JSsl4Ug}, 耗时: 153ms
[2025-06-24 18:49:59.782] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [testuser1750762199781, password123, 1750762199, testuser1750762199781@example.com]
[2025-06-24 18:49:59.871] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:49:59.866490, id=9}, 耗时: 89ms
[2025-06-24 18:49:59.871] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser1750762199781, password123]
[2025-06-24 18:49:59.952] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=9, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjIxOTkiLCJpZCI6OSwiZW1haWwiOiJ0ZXN0dXNlcjE3NTA3NjIxOTk3ODFAZXhhbXBsZS5jb20iLCJ1c2VybmFtZSI6InRlc3R1c2VyMTc1MDc2MjE5OTc4MSIsIm1lbWJlcl9sZXZlbCI6MCwic3RhdHVzIjoiQUNUSVZFIiwic3ViIjoidGVzdHVzZXIxNzUwNzYyMTk5NzgxIiwiaXNzIjoiY2luZW1hLXN5c3RlbSIsImlhdCI6MTc1MDc2MjE5OSwiZXhwIjoxNzUwNzY5Mzk5fQ._Dk_JcvNukCpS5_AKIL09TpVdlcmp4EZG-CcTX3F68I}, 耗时: 80ms
[2025-06-24 18:50:38.760] [INFO] 开始检查数据库完整性...
[2025-06-24 18:50:38.767] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 18:50:39.478] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750762239472, password, orderuser1750762239472@test.com, 1750762239472]
[2025-06-24 18:50:39.774] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:50:39.734178700, id=10}, 耗时: 295ms
[2025-06-24 18:50:40.121] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=10, sessionId=1, seatIds=[1, 2], paymentMethod=ALIPAY)]
[2025-06-24 18:50:40.285] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 异常: 座位已被锁定
[2025-06-24 18:52:26.345] [INFO] 开始检查数据库完整性...
[2025-06-24 18:52:26.359] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 18:52:27.074] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750762347068, password, orderuser1750762347068@test.com, 1750762347068]
[2025-06-24 18:52:27.366] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:52:27.323846200, id=11}, 耗时: 292ms
[2025-06-24 18:52:27.829] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=11, sessionId=1750762347367, seatIds=[1750762347368, 1750762347369], paymentMethod=ALIPAY)]
[2025-06-24 18:52:28.116] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 返回值: {order_no=ORD1750762347840807, payment_url=http://mock-payment-url.com, total_amount=100.0, id=2}, 耗时: 286ms
[2025-06-24 18:52:59.934] [INFO] 开始检查数据库完整性...
[2025-06-24 18:52:59.941] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 18:53:00.626] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750762380620, password, orderuser1750762380620@test.com, 1750762380621]
[2025-06-24 18:53:00.929] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:53:00.884269500, id=12}, 耗时: 303ms
[2025-06-24 18:53:01.285] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=12, sessionId=1750762380929, seatIds=[1750762380930, 1750762380931], paymentMethod=ALIPAY)]
[2025-06-24 18:53:01.526] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 返回值: {order_no=ORD1750762381293130, payment_url=http://mock-payment-url.com, total_amount=100.0, id=3}, 耗时: 240ms
[2025-06-24 18:53:25.975] [INFO] 开始检查数据库完整性...
[2025-06-24 18:53:25.985] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 18:53:26.716] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:53:26.805] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=16, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 89ms
[2025-06-24 18:53:26.873] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 参数: [16, Movie(id=null, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null)]
[2025-06-24 18:53:26.888] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 返回值: Movie(id=16, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null), 耗时: 14ms
[2025-06-24 18:53:26.888] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [16]
[2025-06-24 18:53:26.953] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=16, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null), 耗时: 65ms
[2025-06-24 18:53:27.058] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:53:27.062] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=17, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 4ms
[2025-06-24 18:53:27.063] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 参数: [17]
[2025-06-24 18:53:27.066] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 返回值: Movie(id=17, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=OFF), 耗时: 3ms
[2025-06-24 18:53:27.066] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [17]
[2025-06-24 18:53:27.071] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=17, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=OFF), 耗时: 4ms
[2025-06-24 18:53:27.097] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:53:27.101] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=18, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 4ms
[2025-06-24 18:53:27.104] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [18]
[2025-06-24 18:53:27.106] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=18, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 2ms
[2025-06-24 18:53:27.106] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [18]
[2025-06-24 18:53:27.140] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=18, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 34ms
[2025-06-24 18:53:27.141] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 参数: []
[2025-06-24 18:53:27.143] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 返回值: [{poster_url=null, match_score=1.0, id=18, title=Test Movie One}], 耗时: 2ms
[2025-06-24 18:53:27.166] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:53:27.170] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=19, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 18:53:27.172] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 参数: [One, Page request [number: 0, size 5, sort: UNSORTED]]
[2025-06-24 18:53:27.251] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 返回值: Page 1 of 1 containing com.asaki0019.cinematicketbookingsystem.entities.Movie instances, 耗时: 79ms
[2025-06-24 18:53:27.276] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 18:53:27.280] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=20, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 4ms
[2025-06-24 18:53:27.283] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [20]
[2025-06-24 18:53:27.284] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=20, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 1ms
[2025-06-24 18:54:02.516] [INFO] 开始检查数据库完整性...
[2025-06-24 18:54:02.528] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 18:54:03.429] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750762443418, password, orderuser1750762443418@test.com, 1750762443419]
[2025-06-24 18:54:03.850] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:54:03.798932700, id=13}, 耗时: 420ms
[2025-06-24 18:54:04.273] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=13, sessionId=1750762443850, seatIds=[1750762443851, 1750762443852], paymentMethod=ALIPAY)]
[2025-06-24 18:54:04.892] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 返回值: {order_no=ORD1750762444291940, payment_url=http://mock-payment-url.com, total_amount=100.0, id=4}, 耗时: 616ms
[2025-06-24 18:54:11.135] [INFO] 开始检查数据库完整性...
[2025-06-24 18:54:11.143] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 18:54:11.907] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [updateuser1750762451901, password123, 1750762451, updateuser1750762451901@example.com]
[2025-06-24 18:54:12.209] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:54:12.172494, id=14}, 耗时: 301ms
[2025-06-24 18:54:12.209] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 参数: [14, 1750762453, updated.updateuser1750762451901@example.com, new_avatar_url]
[2025-06-24 18:54:12.252] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 返回值: {update_time=2025-06-24T18:54:12.252487200, id=14}, 耗时: 43ms
[2025-06-24 18:54:12.255] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [updateuser1750762451901, password123]
[2025-06-24 18:54:12.423] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=14, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjI0NTMiLCJpZCI6MTQsImF2YXRhciI6Im5ld19hdmF0YXJfdXJsIiwiZW1haWwiOiJ1cGRhdGVkLnVwZGF0ZXVzZXIxNzUwNzYyNDUxOTAxQGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ1cGRhdGV1c2VyMTc1MDc2MjQ1MTkwMSIsIm1lbWJlcl9sZXZlbCI6MCwic3RhdHVzIjoiQUNUSVZFIiwic3ViIjoidXBkYXRldXNlcjE3NTA3NjI0NTE5MDEiLCJpc3MiOiJjaW5lbWEtc3lzdGVtIiwiaWF0IjoxNzUwNzYyNDUyLCJleHAiOjE3NTA3Njk2NTJ9.wDqx7o2ObljFT0g_KU0xlN4d_3WsAiqIIo8qe9DR-ek}, 耗时: 167ms
[2025-06-24 18:54:12.478] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [testuser1750762452477, password123, 1750762452, testuser1750762452477@example.com]
[2025-06-24 18:54:12.576] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T18:54:12.574006, id=15}, 耗时: 97ms
[2025-06-24 18:54:12.577] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser1750762452477, password123]
[2025-06-24 18:54:12.657] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=15, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjI0NTIiLCJpZCI6MTUsImVtYWlsIjoidGVzdHVzZXIxNzUwNzYyNDUyNDc3QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ0ZXN0dXNlcjE3NTA3NjI0NTI0NzciLCJtZW1iZXJfbGV2ZWwiOjAsInN0YXR1cyI6IkFDVElWRSIsInN1YiI6InRlc3R1c2VyMTc1MDc2MjQ1MjQ3NyIsImlzcyI6ImNpbmVtYS1zeXN0ZW0iLCJpYXQiOjE3NTA3NjI0NTIsImV4cCI6MTc1MDc2OTY1Mn0.r2ScwLCVuawsozWcwwLPD3b6HN9-DmZB3X-kAXdiJPs}, 耗时: 80ms
[2025-06-24 19:20:22.423] [INFO] 开始检查数据库完整性...
[2025-06-24 19:20:22.434] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 19:20:22.493] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 19:20:22.578] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=21, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 85ms
[2025-06-24 19:20:22.623] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 参数: [21, Movie(id=null, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null)]
[2025-06-24 19:20:22.632] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 返回值: Movie(id=21, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null), 耗时: 9ms
[2025-06-24 19:20:22.633] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [21]
[2025-06-24 19:20:22.687] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=21, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null), 耗时: 54ms
[2025-06-24 19:20:22.918] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 19:20:22.921] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=22, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 19:20:22.921] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 参数: [22]
[2025-06-24 19:20:22.923] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 返回值: Movie(id=22, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=OFF), 耗时: 0ms
[2025-06-24 19:20:22.924] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [22]
[2025-06-24 19:20:22.925] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=22, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=OFF), 耗时: 1ms
[2025-06-24 19:20:22.947] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 19:20:22.950] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=23, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 19:20:22.951] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [23]
[2025-06-24 19:20:22.953] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=23, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 2ms
[2025-06-24 19:20:22.953] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [23]
[2025-06-24 19:20:22.978] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=23, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 25ms
[2025-06-24 19:20:22.978] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 参数: []
[2025-06-24 19:20:22.982] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 返回值: [{poster_url=null, match_score=1.0, id=23, title=Test Movie One}], 耗时: 4ms
[2025-06-24 19:20:23.002] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 19:20:23.006] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=24, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 4ms
[2025-06-24 19:20:23.008] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 参数: [One, Page request [number: 0, size 5, sort: UNSORTED]]
[2025-06-24 19:20:23.092] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 返回值: Page 1 of 1 containing com.asaki0019.cinematicketbookingsystem.entities.Movie instances, 耗时: 83ms
[2025-06-24 19:20:23.107] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 19:20:23.110] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=25, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 3ms
[2025-06-24 19:20:23.111] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [25]
[2025-06-24 19:20:23.114] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=25, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING), 耗时: 2ms
[2025-06-24 19:20:23.149] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750764023148, password, orderuser1750764023148@test.com, 1750764023148]
[2025-06-24 19:20:23.261] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T19:20:23.256311700, id=16}, 耗时: 112ms
[2025-06-24 19:20:23.354] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=16, sessionId=1750764023261, seatIds=[1750764023262, 1750764023263], paymentMethod=ALIPAY)]
[2025-06-24 19:20:23.366] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 返回值: {order_no=ORD1750764023355130, payment_url=http://mock-payment-url.com, total_amount=100.0, id=5}, 耗时: 12ms
[2025-06-24 19:20:23.610] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [updateuser1750764023608, password123, 1750764023, updateuser1750764023608@example.com]
[2025-06-24 19:20:23.696] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T19:20:23.694122800, id=17}, 耗时: 86ms
[2025-06-24 19:20:23.696] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 参数: [17, 1750764024, updated.updateuser1750764023608@example.com, new_avatar_url]
[2025-06-24 19:20:23.707] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 返回值: {update_time=2025-06-24T19:20:23.707378800, id=17}, 耗时: 11ms
[2025-06-24 19:20:23.707] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [updateuser1750764023608, password123]
[2025-06-24 19:20:23.829] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=17, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjQwMjQiLCJpZCI6MTcsImF2YXRhciI6Im5ld19hdmF0YXJfdXJsIiwiZW1haWwiOiJ1cGRhdGVkLnVwZGF0ZXVzZXIxNzUwNzY0MDIzNjA4QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ1cGRhdGV1c2VyMTc1MDc2NDAyMzYwOCIsIm1lbWJlcl9sZXZlbCI6MCwic3RhdHVzIjoiQUNUSVZFIiwic3ViIjoidXBkYXRldXNlcjE3NTA3NjQwMjM2MDgiLCJpc3MiOiJjaW5lbWEtc3lzdGVtIiwiaWF0IjoxNzUwNzY0MDIzLCJleHAiOjE3NTA3NzEyMjN9.-7DDGcQWUC1-4XmLohGGvsoaNWoUX3cLhwHpZciQOIc}, 耗时: 122ms
[2025-06-24 19:20:23.858] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [testuser1750764023857, password123, 1750764023, testuser1750764023857@example.com]
[2025-06-24 19:20:23.947] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T19:20:23.945282700, id=18}, 耗时: 89ms
[2025-06-24 19:20:23.947] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser1750764023857, password123]
[2025-06-24 19:20:24.030] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=18, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjQwMjMiLCJpZCI6MTgsImVtYWlsIjoidGVzdHVzZXIxNzUwNzY0MDIzODU3QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ0ZXN0dXNlcjE3NTA3NjQwMjM4NTciLCJtZW1iZXJfbGV2ZWwiOjAsInN0YXR1cyI6IkFDVElWRSIsInN1YiI6InRlc3R1c2VyMTc1MDc2NDAyMzg1NyIsImlzcyI6ImNpbmVtYS1zeXN0ZW0iLCJpYXQiOjE3NTA3NjQwMjQsImV4cCI6MTc1MDc3MTIyNH0.nGzaFQee6jvBgJcdefzDj5iY0AxxPdxsVWpjr0r9bz8}, 耗时: 82ms
[2025-06-24 19:55:19.222] [INFO] 开始检查数据库完整性...
[2025-06-24 19:55:19.230] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 19:55:19.315] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 19:55:19.320] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 异常: 电影参数不合法
[2025-06-24 19:55:19.454] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 19:55:19.454] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 异常: 电影参数不合法
[2025-06-24 19:55:19.470] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 19:55:19.470] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 异常: 电影参数不合法
[2025-06-24 19:55:19.491] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 19:55:19.491] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 异常: 电影参数不合法
[2025-06-24 19:55:19.510] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 19:55:19.510] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 异常: 电影参数不合法
[2025-06-24 19:55:19.552] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750766119551, password, orderuser1750766119551@test.com, 1750766119552]
[2025-06-24 19:55:19.827] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T19:55:19.790522, id=19}, 耗时: 275ms
[2025-06-24 19:55:19.915] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=19, sessionId=1750766119827, seatIds=[1750766119828, 1750766119829], paymentMethod=ALIPAY)]
[2025-06-24 19:55:19.983] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 返回值: {order_no=ORD1750766119918882, payment_url=http://mock-payment-url.com, total_amount=100.0, id=6}, 耗时: 68ms
[2025-06-24 19:55:20.245] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [updateuser1750766120244, password123, 1750766120, updateuser1750766120244@example.com]
[2025-06-24 19:55:20.335] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T19:55:20.332542500, id=20}, 耗时: 90ms
[2025-06-24 19:55:20.337] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 参数: [20, 1750766121, updated.updateuser1750766120244@example.com, new_avatar_url]
[2025-06-24 19:55:20.365] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 返回值: {update_time=2025-06-24T19:55:20.365473100, id=20}, 耗时: 28ms
[2025-06-24 19:55:20.366] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [updateuser1750766120244, password123]
[2025-06-24 19:55:20.487] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=20, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjYxMjEiLCJpZCI6MjAsImF2YXRhciI6Im5ld19hdmF0YXJfdXJsIiwiZW1haWwiOiJ1cGRhdGVkLnVwZGF0ZXVzZXIxNzUwNzY2MTIwMjQ0QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ1cGRhdGV1c2VyMTc1MDc2NjEyMDI0NCIsIm1lbWJlcl9sZXZlbCI6MCwic3RhdHVzIjoiQUNUSVZFIiwic3ViIjoidXBkYXRldXNlcjE3NTA3NjYxMjAyNDQiLCJpc3MiOiJjaW5lbWEtc3lzdGVtIiwiaWF0IjoxNzUwNzY2MTIwLCJleHAiOjE3NTA3NzMzMjB9.0aGnB-pJf4-ch-Kw50xcjk9BCb8JJZn7DaeAdx7m0Uo}, 耗时: 121ms
[2025-06-24 19:55:20.511] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [testuser1750766120510, password123, 1750766120, testuser1750766120510@example.com]
[2025-06-24 19:55:20.601] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T19:55:20.598720, id=21}, 耗时: 90ms
[2025-06-24 19:55:20.601] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser1750766120510, password123]
[2025-06-24 19:55:20.679] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=21, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjYxMjAiLCJpZCI6MjEsImVtYWlsIjoidGVzdHVzZXIxNzUwNzY2MTIwNTEwQGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ0ZXN0dXNlcjE3NTA3NjYxMjA1MTAiLCJtZW1iZXJfbGV2ZWwiOjAsInN0YXR1cyI6IkFDVElWRSIsInN1YiI6InRlc3R1c2VyMTc1MDc2NjEyMDUxMCIsImlzcyI6ImNpbmVtYS1zeXN0ZW0iLCJpYXQiOjE3NTA3NjYxMjAsImV4cCI6MTc1MDc3MzMyMH0.DWp_HWOpUMoKHenY2wfy_3cJti-q1DMTnjeD2S_HAxg}, 耗时: 78ms
[2025-06-24 20:00:42.473] [INFO] 开始检查数据库完整性...
[2025-06-24 20:00:42.483] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 20:00:42.614] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 20:00:42.615] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 异常: 电影参数不合法
[2025-06-24 20:00:42.793] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 20:00:42.794] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 异常: 电影参数不合法
[2025-06-24 20:00:42.813] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 20:00:42.814] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 异常: 电影参数不合法
[2025-06-24 20:00:42.835] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 20:00:42.835] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 异常: 电影参数不合法
[2025-06-24 20:00:42.857] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=SHOWING)]
[2025-06-24 20:00:42.857] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 异常: 电影参数不合法
[2025-06-24 20:00:42.898] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750766442897, password, orderuser1750766442897@test.com, 1750766442898]
[2025-06-24 20:00:43.163] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:00:43.122181700, id=22}, 耗时: 265ms
[2025-06-24 20:00:43.261] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=22, sessionId=1750766443163, seatIds=[1750766443164, 1750766443165], paymentMethod=ALIPAY)]
[2025-06-24 20:00:43.330] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 返回值: {order_no=ORD1750766443266996, payment_url=http://mock-payment-url.com, total_amount=100.0, id=7}, 耗时: 69ms
[2025-06-24 20:00:43.576] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [updateuser1750766443575, password123, 1750766443, updateuser1750766443575@example.com]
[2025-06-24 20:00:43.675] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:00:43.670191400, id=23}, 耗时: 98ms
[2025-06-24 20:00:43.675] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 参数: [23, 1750766444, updated.updateuser1750766443575@example.com, new_avatar_url]
[2025-06-24 20:00:43.706] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 返回值: {update_time=2025-06-24T20:00:43.706174700, id=23}, 耗时: 31ms
[2025-06-24 20:00:43.707] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [updateuser1750766443575, password123]
[2025-06-24 20:00:43.840] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=23, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjY0NDQiLCJpZCI6MjMsImF2YXRhciI6Im5ld19hdmF0YXJfdXJsIiwiZW1haWwiOiJ1cGRhdGVkLnVwZGF0ZXVzZXIxNzUwNzY2NDQzNTc1QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ1cGRhdGV1c2VyMTc1MDc2NjQ0MzU3NSIsIm1lbWJlcl9sZXZlbCI6MCwic3RhdHVzIjoiQUNUSVZFIiwic3ViIjoidXBkYXRldXNlcjE3NTA3NjY0NDM1NzUiLCJpc3MiOiJjaW5lbWEtc3lzdGVtIiwiaWF0IjoxNzUwNzY2NDQzLCJleHAiOjE3NTA3NzM2NDN9.16X7jZIK9hD0GPhLYX2ana0Cv-8DzEdtS3jzPbv6tsE}, 耗时: 133ms
[2025-06-24 20:00:43.865] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [testuser1750766443865, password123, 1750766443, testuser1750766443865@example.com]
[2025-06-24 20:00:43.956] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:00:43.953021700, id=24}, 耗时: 91ms
[2025-06-24 20:00:43.956] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser1750766443865, password123]
[2025-06-24 20:00:44.035] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=24, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjY0NDMiLCJpZCI6MjQsImVtYWlsIjoidGVzdHVzZXIxNzUwNzY2NDQzODY1QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ0ZXN0dXNlcjE3NTA3NjY0NDM4NjUiLCJtZW1iZXJfbGV2ZWwiOjAsInN0YXR1cyI6IkFDVElWRSIsInN1YiI6InRlc3R1c2VyMTc1MDc2NjQ0Mzg2NSIsImlzcyI6ImNpbmVtYS1zeXN0ZW0iLCJpYXQiOjE3NTA3NjY0NDQsImV4cCI6MTc1MDc3MzY0NH0.VugqCcbtxiXiJYVtq-clNULIU7RlW8QKvQjWZuBXATE}, 耗时: 79ms
[2025-06-24 20:04:42.128] [INFO] 开始检查数据库完整性...
[2025-06-24 20:04:42.138] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 20:04:42.217] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:04:42.347] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=26, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 130ms
[2025-06-24 20:04:42.404] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 参数: [26, Movie(id=null, title=Updated Test Movie, director=null, actors=null, duration=null, releaseDate=2025-06-24, description=null, posterUrl=null, trailerUrl=null, rating=null, status=null)]
[2025-06-24 20:04:42.404] [ERROR] 方法异常: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 异常: 电影参数不合法
[2025-06-24 20:04:42.487] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:04:42.492] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=27, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 5ms
[2025-06-24 20:04:42.493] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 参数: [27]
[2025-06-24 20:04:42.508] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 返回值: Movie(id=27, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=OFF), 耗时: 15ms
[2025-06-24 20:04:42.509] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [27]
[2025-06-24 20:04:42.560] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=27, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=OFF), 耗时: 51ms
[2025-06-24 20:04:42.598] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:04:42.602] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=28, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 4ms
[2025-06-24 20:04:42.603] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [28]
[2025-06-24 20:04:42.607] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=28, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 3ms
[2025-06-24 20:04:42.607] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [28]
[2025-06-24 20:04:42.636] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=28, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 29ms
[2025-06-24 20:04:42.637] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 参数: []
[2025-06-24 20:04:42.638] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 返回值: [{poster_url=http://example.com/poster.jpg, match_score=1.0, id=28, title=Test Movie One}], 耗时: 1ms
[2025-06-24 20:04:42.663] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:04:42.668] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=29, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 5ms
[2025-06-24 20:04:42.907] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 参数: [One, Page request [number: 0, size 5, sort: UNSORTED]]
[2025-06-24 20:04:42.993] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 返回值: Page 1 of 1 containing com.asaki0019.cinematicketbookingsystem.entities.Movie instances, 耗时: 85ms
[2025-06-24 20:04:43.010] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:04:43.014] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=30, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 2ms
[2025-06-24 20:04:43.015] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [30]
[2025-06-24 20:04:43.016] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=30, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 1ms
[2025-06-24 20:04:43.059] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750766683059, password, orderuser1750766683059@test.com, 1750766683059]
[2025-06-24 20:04:43.194] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:04:43.189976100, id=25}, 耗时: 134ms
[2025-06-24 20:04:43.285] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=25, sessionId=1750766683195, seatIds=[1750766683196, 1750766683197], paymentMethod=ALIPAY)]
[2025-06-24 20:04:43.298] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 返回值: {order_no=ORD1750766683286832, payment_url=http://mock-payment-url.com, total_amount=100.0, id=8}, 耗时: 13ms
[2025-06-24 20:04:43.519] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [updateuser1750766683517, password123, 1750766683, updateuser1750766683517@example.com]
[2025-06-24 20:04:43.610] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:04:43.608771, id=26}, 耗时: 91ms
[2025-06-24 20:04:43.610] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 参数: [26, 1750766684, updated.updateuser1750766683517@example.com, new_avatar_url]
[2025-06-24 20:04:43.624] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 返回值: {update_time=2025-06-24T20:04:43.624275200, id=26}, 耗时: 13ms
[2025-06-24 20:04:43.625] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [updateuser1750766683517, password123]
[2025-06-24 20:04:43.756] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=26, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjY2ODQiLCJpZCI6MjYsImF2YXRhciI6Im5ld19hdmF0YXJfdXJsIiwiZW1haWwiOiJ1cGRhdGVkLnVwZGF0ZXVzZXIxNzUwNzY2NjgzNTE3QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ1cGRhdGV1c2VyMTc1MDc2NjY4MzUxNyIsIm1lbWJlcl9sZXZlbCI6MCwic3RhdHVzIjoiQUNUSVZFIiwic3ViIjoidXBkYXRldXNlcjE3NTA3NjY2ODM1MTciLCJpc3MiOiJjaW5lbWEtc3lzdGVtIiwiaWF0IjoxNzUwNzY2NjgzLCJleHAiOjE3NTA3NzM4ODN9.WdTFeXH2FfaQ2L2vDqnw4wz5DofIDYvcOs-DI7DdGzk}, 耗时: 131ms
[2025-06-24 20:04:43.779] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [testuser1750766683779, password123, 1750766683, testuser1750766683779@example.com]
[2025-06-24 20:04:43.866] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:04:43.864109400, id=27}, 耗时: 87ms
[2025-06-24 20:04:43.867] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser1750766683779, password123]
[2025-06-24 20:04:43.944] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=27, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjY2ODMiLCJpZCI6MjcsImVtYWlsIjoidGVzdHVzZXIxNzUwNzY2NjgzNzc5QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ0ZXN0dXNlcjE3NTA3NjY2ODM3NzkiLCJtZW1iZXJfbGV2ZWwiOjAsInN0YXR1cyI6IkFDVElWRSIsInN1YiI6InRlc3R1c2VyMTc1MDc2NjY4Mzc3OSIsImlzcyI6ImNpbmVtYS1zeXN0ZW0iLCJpYXQiOjE3NTA3NjY2ODMsImV4cCI6MTc1MDc3Mzg4M30.2GinB_TM-zz7QzBO6PfSJZ2BhfgO6yaKY_rFdYgKGD0}, 耗时: 76ms
[2025-06-24 20:06:55.233] [INFO] 开始检查数据库完整性...
[2025-06-24 20:06:55.240] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 20:06:55.349] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:06:55.448] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=31, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 99ms
[2025-06-24 20:06:55.500] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 参数: [31, Movie(id=null, title=Updated Test Movie, director=Updated Director, actors=主演A,主演B, duration=130, releaseDate=2025-06-24, description=更新后的简介, posterUrl=http://example.com/updated_poster.jpg, trailerUrl=http://example.com/updated_trailer.mp4, rating=9.0, status=SHOWING)]
[2025-06-24 20:06:55.513] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 返回值: Movie(id=31, title=Updated Test Movie, director=Updated Director, actors=主演A,主演B, duration=130, releaseDate=2025-06-24, description=更新后的简介, posterUrl=http://example.com/updated_poster.jpg, trailerUrl=http://example.com/updated_trailer.mp4, rating=9.0, status=SHOWING), 耗时: 12ms
[2025-06-24 20:06:55.514] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [31]
[2025-06-24 20:06:55.566] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=31, title=Updated Test Movie, director=Updated Director, actors=主演A,主演B, duration=130, releaseDate=2025-06-24, description=更新后的简介, posterUrl=http://example.com/updated_poster.jpg, trailerUrl=http://example.com/updated_trailer.mp4, rating=9.0, status=SHOWING), 耗时: 52ms
[2025-06-24 20:06:55.650] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:06:55.655] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=32, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 4ms
[2025-06-24 20:06:55.656] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 参数: [32]
[2025-06-24 20:06:55.657] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 返回值: Movie(id=32, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=OFF), 耗时: 1ms
[2025-06-24 20:06:55.657] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [32]
[2025-06-24 20:06:55.661] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=32, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=OFF), 耗时: 2ms
[2025-06-24 20:06:55.694] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:06:55.699] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=33, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 4ms
[2025-06-24 20:06:55.700] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [33]
[2025-06-24 20:06:55.701] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=33, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 1ms
[2025-06-24 20:06:55.701] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [33]
[2025-06-24 20:06:55.734] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=33, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 33ms
[2025-06-24 20:06:55.735] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 参数: []
[2025-06-24 20:06:55.737] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 返回值: [{poster_url=http://example.com/poster.jpg, match_score=1.0, id=33, title=Test Movie One}], 耗时: 2ms
[2025-06-24 20:06:55.763] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:06:55.767] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=34, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 4ms
[2025-06-24 20:06:55.768] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 参数: [One, Page request [number: 0, size 5, sort: UNSORTED]]
[2025-06-24 20:06:55.855] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 返回值: Page 1 of 1 containing com.asaki0019.cinematicketbookingsystem.entities.Movie instances, 耗时: 86ms
[2025-06-24 20:06:55.875] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:06:55.878] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=35, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 3ms
[2025-06-24 20:06:55.879] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [35]
[2025-06-24 20:06:55.881] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=35, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 2ms
[2025-06-24 20:06:55.916] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750766815915, password, orderuser1750766815915@test.com, 1750766815915]
[2025-06-24 20:06:56.037] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:06:56.034138800, id=28}, 耗时: 121ms
[2025-06-24 20:06:56.124] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=28, sessionId=1750766816037, seatIds=[1750766816038, 1750766816039], paymentMethod=ALIPAY)]
[2025-06-24 20:06:56.141] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 返回值: {order_no=ORD1750766816125973, payment_url=http://mock-payment-url.com, total_amount=100.0, id=9}, 耗时: 16ms
[2025-06-24 20:06:56.359] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [updateuser1750766816359, password123, 1750766816, updateuser1750766816359@example.com]
[2025-06-24 20:06:56.450] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:06:56.447229900, id=29}, 耗时: 90ms
[2025-06-24 20:06:56.450] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 参数: [29, 1750766817, updated.updateuser1750766816359@example.com, new_avatar_url]
[2025-06-24 20:06:56.465] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 返回值: {update_time=2025-06-24T20:06:56.465605700, id=29}, 耗时: 15ms
[2025-06-24 20:06:56.465] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [updateuser1750766816359, password123]
[2025-06-24 20:06:56.588] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=29, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjY4MTciLCJpZCI6MjksImF2YXRhciI6Im5ld19hdmF0YXJfdXJsIiwiZW1haWwiOiJ1cGRhdGVkLnVwZGF0ZXVzZXIxNzUwNzY2ODE2MzU5QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ1cGRhdGV1c2VyMTc1MDc2NjgxNjM1OSIsIm1lbWJlcl9sZXZlbCI6MCwic3RhdHVzIjoiQUNUSVZFIiwic3ViIjoidXBkYXRldXNlcjE3NTA3NjY4MTYzNTkiLCJpc3MiOiJjaW5lbWEtc3lzdGVtIiwiaWF0IjoxNzUwNzY2ODE2LCJleHAiOjE3NTA3NzQwMTZ9.GhbartHJI8hbm4tx27JIQ2_aPcPxW7cbFAtUFtcLg0s}, 耗时: 123ms
[2025-06-24 20:06:56.611] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [testuser1750766816610, password123, 1750766816, testuser1750766816610@example.com]
[2025-06-24 20:06:56.700] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:06:56.697874100, id=30}, 耗时: 89ms
[2025-06-24 20:06:56.700] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser1750766816610, password123]
[2025-06-24 20:06:56.783] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=30, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjY4MTYiLCJpZCI6MzAsImVtYWlsIjoidGVzdHVzZXIxNzUwNzY2ODE2NjEwQGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ0ZXN0dXNlcjE3NTA3NjY4MTY2MTAiLCJtZW1iZXJfbGV2ZWwiOjAsInN0YXR1cyI6IkFDVElWRSIsInN1YiI6InRlc3R1c2VyMTc1MDc2NjgxNjYxMCIsImlzcyI6ImNpbmVtYS1zeXN0ZW0iLCJpYXQiOjE3NTA3NjY4MTYsImV4cCI6MTc1MDc3NDAxNn0.kK49CYrtKG4tERt8xBSD0Q0vMz7qOP5kY3PgOPg4XYI}, 耗时: 83ms
[2025-06-24 20:09:02.294] [INFO] 开始检查数据库完整性...
[2025-06-24 20:09:02.302] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 20:09:02.405] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:09:02.527] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=36, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 122ms
[2025-06-24 20:09:02.582] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 参数: [36, Movie(id=null, title=Updated Test Movie, director=Updated Director, actors=主演A,主演B, duration=130, releaseDate=2025-06-24, description=更新后的简介, posterUrl=http://example.com/updated_poster.jpg, trailerUrl=http://example.com/updated_trailer.mp4, rating=9.0, status=SHOWING)]
[2025-06-24 20:09:02.596] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 返回值: Movie(id=36, title=Updated Test Movie, director=Updated Director, actors=主演A,主演B, duration=130, releaseDate=2025-06-24, description=更新后的简介, posterUrl=http://example.com/updated_poster.jpg, trailerUrl=http://example.com/updated_trailer.mp4, rating=9.0, status=SHOWING), 耗时: 13ms
[2025-06-24 20:09:02.598] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [36]
[2025-06-24 20:09:02.660] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=36, title=Updated Test Movie, director=Updated Director, actors=主演A,主演B, duration=130, releaseDate=2025-06-24, description=更新后的简介, posterUrl=http://example.com/updated_poster.jpg, trailerUrl=http://example.com/updated_trailer.mp4, rating=9.0, status=SHOWING), 耗时: 62ms
[2025-06-24 20:09:02.765] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:09:02.772] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=37, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 6ms
[2025-06-24 20:09:02.773] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 参数: [37]
[2025-06-24 20:09:02.774] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 返回值: Movie(id=37, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=OFF), 耗时: 1ms
[2025-06-24 20:09:02.774] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [37]
[2025-06-24 20:09:02.778] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=37, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=OFF), 耗时: 3ms
[2025-06-24 20:09:02.803] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:09:02.808] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=38, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 5ms
[2025-06-24 20:09:02.809] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [38]
[2025-06-24 20:09:02.812] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=38, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 2ms
[2025-06-24 20:09:02.812] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [38]
[2025-06-24 20:09:02.849] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=38, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 36ms
[2025-06-24 20:09:02.849] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 参数: []
[2025-06-24 20:09:02.851] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 返回值: [{poster_url=http://example.com/poster.jpg, match_score=1.0, id=38, title=Test Movie One}], 耗时: 2ms
[2025-06-24 20:09:02.874] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:09:02.878] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=39, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 3ms
[2025-06-24 20:09:02.879] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 参数: [One, Page request [number: 0, size 5, sort: UNSORTED]]
[2025-06-24 20:09:02.968] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 返回值: Page 1 of 1 containing com.asaki0019.cinematicketbookingsystem.entities.Movie instances, 耗时: 88ms
[2025-06-24 20:09:02.989] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:09:02.994] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=40, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 4ms
[2025-06-24 20:09:02.995] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [40]
[2025-06-24 20:09:02.997] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=40, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 2ms
[2025-06-24 20:09:03.033] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750766943032, password, orderuser1750766943032@test.com, 1750766943033]
[2025-06-24 20:09:03.159] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:09:03.154702100, id=31}, 耗时: 126ms
[2025-06-24 20:09:03.263] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=31, sessionId=1750766943159, seatIds=[1750766943160, 1750766943161], paymentMethod=ALIPAY)]
[2025-06-24 20:09:03.279] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 返回值: {order_no=ORD1750766943266240, payment_url=http://mock-payment-url.com, total_amount=100.0, id=10}, 耗时: 16ms
[2025-06-24 20:09:03.537] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [updateuser1750766943537, password123, 1750766943, updateuser1750766943537@example.com]
[2025-06-24 20:09:03.626] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:09:03.623296900, id=32}, 耗时: 88ms
[2025-06-24 20:09:03.626] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 参数: [32, 1750766944, updated.updateuser1750766943537@example.com, new_avatar_url]
[2025-06-24 20:09:03.640] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 返回值: {update_time=2025-06-24T20:09:03.640844200, id=32}, 耗时: 14ms
[2025-06-24 20:09:03.640] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [updateuser1750766943537, password123]
[2025-06-24 20:09:03.783] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=32, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjY5NDQiLCJpZCI6MzIsImF2YXRhciI6Im5ld19hdmF0YXJfdXJsIiwiZW1haWwiOiJ1cGRhdGVkLnVwZGF0ZXVzZXIxNzUwNzY2OTQzNTM3QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ1cGRhdGV1c2VyMTc1MDc2Njk0MzUzNyIsIm1lbWJlcl9sZXZlbCI6MCwic3RhdHVzIjoiQUNUSVZFIiwic3ViIjoidXBkYXRldXNlcjE3NTA3NjY5NDM1MzciLCJpc3MiOiJjaW5lbWEtc3lzdGVtIiwiaWF0IjoxNzUwNzY2OTQzLCJleHAiOjE3NTA3NzQxNDN9._QCuOZZtFiaTuArvwu3URThdX5T2Q9r_FGplfahceMY}, 耗时: 141ms
[2025-06-24 20:09:03.807] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [testuser1750766943807, password123, 1750766943, testuser1750766943807@example.com]
[2025-06-24 20:09:03.905] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:09:03.893476800, id=33}, 耗时: 98ms
[2025-06-24 20:09:03.905] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser1750766943807, password123]
[2025-06-24 20:09:03.994] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=33, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjY5NDMiLCJpZCI6MzMsImVtYWlsIjoidGVzdHVzZXIxNzUwNzY2OTQzODA3QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ0ZXN0dXNlcjE3NTA3NjY5NDM4MDciLCJtZW1iZXJfbGV2ZWwiOjAsInN0YXR1cyI6IkFDVElWRSIsInN1YiI6InRlc3R1c2VyMTc1MDc2Njk0MzgwNyIsImlzcyI6ImNpbmVtYS1zeXN0ZW0iLCJpYXQiOjE3NTA3NjY5NDMsImV4cCI6MTc1MDc3NDE0M30.YieV51wdSRGF2UsrT9hnag88dJNPNFbrnzSzyCdMLjc}, 耗时: 88ms
[2025-06-24 20:12:38.131] [INFO] 开始检查数据库完整性...
[2025-06-24 20:12:38.142] [INFO] 数据库结构已存在且完整，跳过初始化。
[2025-06-24 20:12:38.224] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:12:38.347] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=41, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 123ms
[2025-06-24 20:12:38.402] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 参数: [41, Movie(id=null, title=Updated Test Movie, director=Updated Director, actors=主演A,主演B, duration=130, releaseDate=2025-06-24, description=更新后的简介, posterUrl=http://example.com/updated_poster.jpg, trailerUrl=http://example.com/updated_trailer.mp4, rating=9.0, status=SHOWING)]
[2025-06-24 20:12:38.418] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.updateMovie, 返回值: Movie(id=41, title=Updated Test Movie, director=Updated Director, actors=主演A,主演B, duration=130, releaseDate=2025-06-24, description=更新后的简介, posterUrl=http://example.com/updated_poster.jpg, trailerUrl=http://example.com/updated_trailer.mp4, rating=9.0, status=SHOWING), 耗时: 15ms
[2025-06-24 20:12:38.418] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [41]
[2025-06-24 20:12:38.475] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=41, title=Updated Test Movie, director=Updated Director, actors=主演A,主演B, duration=130, releaseDate=2025-06-24, description=更新后的简介, posterUrl=http://example.com/updated_poster.jpg, trailerUrl=http://example.com/updated_trailer.mp4, rating=9.0, status=SHOWING), 耗时: 55ms
[2025-06-24 20:12:38.569] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:12:38.573] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=42, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 4ms
[2025-06-24 20:12:38.575] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 参数: [42]
[2025-06-24 20:12:38.576] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.delistMovie, 返回值: Movie(id=42, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=OFF), 耗时: 1ms
[2025-06-24 20:12:38.576] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [42]
[2025-06-24 20:12:38.580] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=42, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=OFF), 耗时: 4ms
[2025-06-24 20:12:38.615] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:12:38.621] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=43, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 6ms
[2025-06-24 20:12:38.622] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [43]
[2025-06-24 20:12:38.624] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=43, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 2ms
[2025-06-24 20:12:38.625] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [43]
[2025-06-24 20:12:38.679] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=43, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 54ms
[2025-06-24 20:12:38.680] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 参数: []
[2025-06-24 20:12:38.682] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getRecommendedMovies, 返回值: [{poster_url=http://example.com/poster.jpg, match_score=1.0, id=43, title=Test Movie One}], 耗时: 2ms
[2025-06-24 20:12:38.707] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:12:38.712] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=44, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 5ms
[2025-06-24 20:12:38.714] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 参数: [One, Page request [number: 0, size 5, sort: UNSORTED]]
[2025-06-24 20:12:38.802] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.searchMovies, 返回值: Page 1 of 1 containing com.asaki0019.cinematicketbookingsystem.entities.Movie instances, 耗时: 88ms
[2025-06-24 20:12:38.825] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 参数: [Movie(id=null, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING)]
[2025-06-24 20:12:38.828] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.createMovie, 返回值: Movie(id=45, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 3ms
[2025-06-24 20:12:38.829] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 参数: [45]
[2025-06-24 20:12:38.831] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.MovieServiceImpl.getMovieById, 返回值: Movie(id=45, title=Test Movie One, director=Test Director, actors=主演A,主演B, duration=120, releaseDate=2025-06-24, description=测试电影简介, posterUrl=http://example.com/poster.jpg, trailerUrl=http://example.com/trailer.mp4, rating=8.5, status=SHOWING), 耗时: 2ms
[2025-06-24 20:12:38.865] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [orderuser1750767158865, password, orderuser1750767158865@test.com, 1750767158865]
[2025-06-24 20:12:38.979] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:12:38.975903600, id=34}, 耗时: 112ms
[2025-06-24 20:12:39.064] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 参数: [OrderRequest(userId=34, sessionId=1750767158979, seatIds=[1750767158980, 1750767158981], paymentMethod=ALIPAY)]
[2025-06-24 20:12:39.077] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.OrderServiceImpl.createOrder, 返回值: {order_no=ORD175076715906582, payment_url=http://mock-payment-url.com, total_amount=100.0, id=11}, 耗时: 13ms
[2025-06-24 20:12:39.287] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [updateuser1750767159286, password123, 1750767159, updateuser1750767159286@example.com]
[2025-06-24 20:12:39.376] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:12:39.374151800, id=35}, 耗时: 89ms
[2025-06-24 20:12:39.377] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 参数: [35, 1750767160, updated.updateuser1750767159286@example.com, new_avatar_url]
[2025-06-24 20:12:39.386] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.updateUserInfo, 返回值: {update_time=2025-06-24T20:12:39.386559700, id=35}, 耗时: 9ms
[2025-06-24 20:12:39.386] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [updateuser1750767159286, password123]
[2025-06-24 20:12:39.512] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=35, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjcxNjAiLCJpZCI6MzUsImF2YXRhciI6Im5ld19hdmF0YXJfdXJsIiwiZW1haWwiOiJ1cGRhdGVkLnVwZGF0ZXVzZXIxNzUwNzY3MTU5Mjg2QGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ1cGRhdGV1c2VyMTc1MDc2NzE1OTI4NiIsIm1lbWJlcl9sZXZlbCI6MCwic3RhdHVzIjoiQUNUSVZFIiwic3ViIjoidXBkYXRldXNlcjE3NTA3NjcxNTkyODYiLCJpc3MiOiJjaW5lbWEtc3lzdGVtIiwiaWF0IjoxNzUwNzY3MTU5LCJleHAiOjE3NTA3NzQzNTl9.lWddQ_IsdczV2zZpG039Yt_Bw62BVEiGqaZrkzBNHGs}, 耗时: 125ms
[2025-06-24 20:12:39.531] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 参数: [testuser1750767159531, password123, 1750767159, testuser1750767159531@example.com]
[2025-06-24 20:12:39.621] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.register, 返回值: {create_time=2025-06-24T20:12:39.617446900, id=36}, 耗时: 89ms
[2025-06-24 20:12:39.621] [INFO] 调用方法: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 参数: [testuser1750767159531, password123]
[2025-06-24 20:12:39.700] [INFO] 方法返回: com.asaki0019.cinematicketbookingsystem.services.UserServiceImpl.login, 返回值: {user={id=36, member_level=0}, token=eyJhbGciOiJIUzI1NiJ9.eyJwaG9uZSI6IjE3NTA3NjcxNTkiLCJpZCI6MzYsImVtYWlsIjoidGVzdHVzZXIxNzUwNzY3MTU5NTMxQGV4YW1wbGUuY29tIiwidXNlcm5hbWUiOiJ0ZXN0dXNlcjE3NTA3NjcxNTk1MzEiLCJtZW1iZXJfbGV2ZWwiOjAsInN0YXR1cyI6IkFDVElWRSIsInN1YiI6InRlc3R1c2VyMTc1MDc2NzE1OTUzMSIsImlzcyI6ImNpbmVtYS1zeXN0ZW0iLCJpYXQiOjE3NTA3NjcxNTksImV4cCI6MTc1MDc3NDM1OX0.TlJwQv6DAORM26Acu0yUdU_8R3htqrIlMOwouyon-Eo}, 耗时: 79ms
